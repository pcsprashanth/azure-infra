name: 'CAF-Test'

on:
    push:
        branches:
            - main
        # paths:
        #     - 'environments/dev/**'    
env:
      ENV_NAME: dev

jobs:
    terraform:
        name: 'Terraform'
        runs-on: ubuntu-latest
        
        permissions:
            id-token: write
            contents: write

        steps:
 
            - name: Azure Login
              uses: azure/login@v1
              with:
                    client-id: ${{ secrets.ARM_CLIENT_ID }}
                    tenant-id: ${{ secrets.ARM_TENANT_ID }}
                    subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

            - name: Checkout repository
              uses: actions/checkout@v2
            
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                    terraform_version: latest
                    
            - name: Terraform Version
              run: terraform --version
            
            - name: Check Terraform Backend Configuration and Create if Non-EXISTENT
              id: check_backend
              run: |
                tfstate_file=".terraform/terraform-policy.tfstate"
                if [ ! -f "$tfstate_file" ]; then
                  # Create RG
                  az group create --name ctstest --location brazilsouth
                  # Create Storage and container
                  az storage account create --name chandrastoragects --resource-group ctstest --location brazilsouth --sku Standard_LRS --kind StorageV2 --encryption-services blob
                  accountKey=$(az storage account keys list --account-name chandrastoragects --resource-group ctstest --output tsv --query "[0].value")
                  az storage container create --name chandracontainercts --account-name chandrastoragects --account-key $accountKey
                  # Enable storage versioning
                  az storage account blob-service-properties update --account-name chandrastoragects --resource-group ctstest --enable-versioning true
                  echo "::set-output name=accountKey::$accountKey"
                fi
              shell: bash
        
            - name: Initialize Terraform Backend
              env:
                ARM_ACCESS_KEY: ${{ steps.check_backend.outputs.accountKey }}
              run: |
                touch backend.tf
                cat <<EOF > backend.tf
                terraform {
                  backend "azurerm" {
                    storage_account_name = "chandrastoragects"
                    container_name       = "chandracontainercts"
                    key                  = "terraform-cts.tfstate"
                  }
                }
                EOF
                terraform init
              working-directory: /home/runner/work/azure-infra/azure-infra/
            

            - name: Terraform validate
              run: terraform validate
              working-directory: /home/runner/work/azure-infra/azure-infra/
            
            - name: Force Unlock Terraform State
              env:
                ARM_ACCESS_KEY: ${{ steps.check_backend.outputs.accountKey }}
              run: |
                terraform force-unlock -force 55df460e-aae1-9e05-dfa7-a3d6661a8fcb
              working-directory: /home/runner/work/azure-infra/azure-infra/
        
            - name: Terraform Plan
              env:
                ARM_ACCESS_KEY: ${{ steps.check_backend.outputs.accountKey }}
              id: tf-plan
              run: |
                export exitcode=0
                terraform plan -detailed-exitcode -no-color -lock=false -out tfplan || export exitcode=$?
                echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
               
                if [ $exitcode -eq 1 ]; then
                  echo Terraform Plan Failed!
                  exit 1
                else
                  exit 0
                fi
              working-directory: /home/runner/work/azure-infra/azure-infra/

            - name: Terraform Apply
              env:
                ARM_ACCESS_KEY: ${{ steps.check_backend.outputs.accountKey }}
              id: tf-apply
              run: terraform apply -auto-approve tfplan
              working-directory: /home/runner/work/azure-infra/azure-infra/

            - name: Publish Terraform Plan
              uses: actions/upload-artifact@v3
              with:
                name: tfplan
                path: tfplan